plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'shop.kokodo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.4")
    queryDslVersion = "5.0.0"
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //zipkin
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.2.RELEASE'
    //circuitbreaker
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'

//    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    //eureka
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    //feign client
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    //mysql
    implementation 'mysql:mysql-connector-java:8.0.28'
    //kafka
    implementation 'org.springframework.kafka:spring-kafka'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //rabbitmq
    testImplementation 'org.springframework.amqp:spring-rabbit-test'

    // h2 database
    implementation 'com.h2database:h2:1.3.176'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.4'

    // model mapper
    implementation 'org.modelmapper:modelmapper:2.3.8'

    //junit
    implementation 'junit:junit'
//    testImplementation 'org.junit.jupiter:junit-jupiter-api'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
//    testImplementation 'org.junit.vintage:junit-vintage-engine'

    // restAssured
    testImplementation group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc', version: '2.0.4.RELEASE'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testImplementation 'io.rest-assured:rest-assured'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // QueryDsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

//==================Spring Rest docs==================
test {
    outputs.dir snippetsDir
}

asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
//    configurations 'asciidoctorExt'
}

task createDocument(type: Copy) {
    dependsOn asciidoctor
    asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

//==================Spring Rest docs==================
build {
    dependsOn createDocument
}

bootJar {
    dependsOn createDocument
    from("${asciidoctor.outputDir}/html5") {
        into 'static'
    }
}

// QueryDSL
sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}